<?xml version="1.0" ?>

<class>

<namespace>NVL_App</namespace>
<solution>CamControlLib</solution>
<name>Camera</name>
<description>A base class for abstracting cameras</description>

<includes>
    <include name="iostream" namespace="std" local="false" />
</includes>

<constructors>
    <constructor type="empty" inline="true" />
</constructors>

<methods>

    <!-- Start Recording -->
    <method section="Recording" modifiers="virtual" access="public" return="bool" name="StartRecord" description="Tells the camera to start recording" inline="true" />

    <!-- Stop Recording -->
    <method section="Recording" modifiers="virtual" access="public" return="bool" name="StopRecord" description="Tells the camera to start recording" inline="true" />

    <!-- Is Recording -->
    <method section="Recording" modifiers="virtual" access="public" return="bool" name="IsRecording" description="Retrieve the recording status" inline="true" />

    <!-- Save State -->
    <method section="Logging" modifiers="virtual" access="public" return="void" name="SaveState" description="Write elements of the camera state to disk" inline="true">
        <parameter type="const string&" name="path" description="The path that we are writing to" />
    </method>  

</methods>

</class>